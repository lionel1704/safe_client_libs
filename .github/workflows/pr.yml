name: PR

on:
  push:
    branches:
      - action_test

env:
  # Run all cargo commands with --verbose.
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  # Deny all compiler warnings.
  RUSTFLAGS: "-D warnings"
  SAFE_CLI_VERSION: "latest"
  SAFE_VAULT_VERSION: "latest"

jobs:
  coverage:
    name: Code coverage check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install Rust and required components
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Use dedicated action for starting a baby fleming section
      - uses: maidsafe/start-local-safe-network-action@v1
        with:
          vault-version: '${{env.SAFE_VAULT_VERSION}}'
          cli-version: '${{env.SAFE_CLI_VERSION}}'

      - uses: actions/upload-artifact@v2
        name: Upload all vault data
        with:
          name: my-artifact
          path: ~/.safe/vault/baby-fleming-vaults

      # Generate Cargo.lock, needed for the cache.
      - name: Generate Cargo.lock
        run: cargo generate-lockfile

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      - name: Check if vaults are running
        run: pgrep -a safe_vault
      
      - name: Print connection info
        run: cat ~/.config/safe_vault/vault_connection_info.config

      # Run cargo tarpaulin & push result to coveralls.io
      - name: rust-tarpaulin code coverage check
        uses: actions-rs/tarpaulin@master
        with:
          args: '-v -t 10000 --release --out Lcov'
      - name: Push code coverage results to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          path-to-lcov: ./lcov.info
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true